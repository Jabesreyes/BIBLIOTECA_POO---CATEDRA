package vista;

import java.util.Date;
import javax.swing.JOptionPane;
import modelo.SqlMateriales;
import modelo.SqlPrestamos;
import modelo.usuarios;

public class home extends javax.swing.JFrame {

    usuarios mod;

    public static registro frmReg;
    public static RContraseña frmReCon;
    public static Mora frmMora;
    public static Devoluciones frmDev;
    public static Consultar frmConsulta;

    public home() {
        initComponents();
    }

    public home(usuarios mod) {
        initComponents();
        setLocationRelativeTo(null);
        this.mod = mod;
       

        if (mod.getId_tipo() == 1) {

        } else if (mod.getId_tipo() == 2) {
            
            btnConfigurar.setVisible(false);
            btnMora.setVisible(false);
            btnRegistrar.setVisible(false);
            btnReContraseña.setVisible(false);
        } else if (mod.getId_tipo() == 3) {
            btnRegistrar.setVisible(false);
            btnReContraseña.setVisible(false);
            btnConfigurar.setVisible(false);
            btnMora.setVisible(false);
            btnIngEjem.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnReContraseña = new javax.swing.JButton();
        btnIngEjem = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        btnprestamos = new javax.swing.JButton();
        btnConfigurar = new javax.swing.JButton();
        btnDevoluciones = new javax.swing.JButton();
        btnMora = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        jLabel1.setText("Colegio Amigos De Don Bosco");

        btnRegistrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnReContraseña.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnReContraseña.setText("Reestablecer Contraseña");
        btnReContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReContraseñaActionPerformed(evt);
            }
        });

        btnIngEjem.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnIngEjem.setText("Ingresar Ejemplares");
        btnIngEjem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngEjemActionPerformed(evt);
            }
        });

        btnConsulta.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnConsulta.setText("Consultar Ejemplares");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        btnprestamos.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnprestamos.setText("Prestamos");
        btnprestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprestamosActionPerformed(evt);
            }
        });

        btnConfigurar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnConfigurar.setText("Configuraciones");
        btnConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigurarActionPerformed(evt);
            }
        });

        btnDevoluciones.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDevoluciones.setText("Devoluciones");
        btnDevoluciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolucionesActionPerformed(evt);
            }
        });

        btnMora.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnMora.setText("Modificar Mora");
        btnMora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReContraseña)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnMora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfigurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnprestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIngEjem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDevoluciones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel1)
                .addGap(10, 182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(btnConsulta)
                .addGap(18, 18, 18)
                .addComponent(btnprestamos)
                .addGap(18, 18, 18)
                .addComponent(btnDevoluciones)
                .addGap(18, 18, 18)
                .addComponent(btnIngEjem)
                .addGap(18, 18, 18)
                .addComponent(btnConfigurar)
                .addGap(18, 18, 18)
                .addComponent(btnMora)
                .addGap(18, 18, 18)
                .addComponent(btnReContraseña)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrar)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        if (frmReg == null) {
            frmReg = new registro();
            frmReg.setVisible(true);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnReContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReContraseñaActionPerformed
        // TODO add your handling code here:
        if (frmReCon == null) {
            frmReCon = new RContraseña();
            frmReCon.setVisible(true);
        }
    }//GEN-LAST:event_btnReContraseñaActionPerformed

    private void btnIngEjemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngEjemActionPerformed
        // TODO add your handling code here:
        String MaterialType = JOptionPane.showInputDialog("Tipo de material: (CDs, Libros, Obras, Revistas, Tesis").toLowerCase();
        switch (MaterialType) {
            case "cds":
                agregarCD();
                break;

            case "libros":
                agregarLibros();
                break;

            case "obras":
                agregarObras();
                break;

            case "revistas":
                agregarRevistas();
                break;

            case "tesis":
                agregarTesis();
                break;

            default:
                JOptionPane.showMessageDialog(this, "Tipo de material no válido", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }//GEN-LAST:event_btnIngEjemActionPerformed

    private void btnprestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprestamosActionPerformed
        // TODO add your handling code here:
        String MaterialType = JOptionPane.showInputDialog("Tipo de material a prestar: (CDs, Libros, Obras, Revistas, Tesis").toLowerCase();
        switch (MaterialType) {
            case "cds":
                prestarCD();
                break;

            case "libros":
                prestarLibro();
                break;

            case "obras":
                prestarObra();
                break;

            case "revistas":
                prestarRevista();
                break;

            case "tesis":
                prestarTesis();
                break;

            default:
                JOptionPane.showMessageDialog(this, "Tipo de material no válido", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
        
    }//GEN-LAST:event_btnprestamosActionPerformed

    private void btnConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigurarActionPerformed
        // TODO add your handling code here:
        
        String MaterialType = JOptionPane.showInputDialog("Instancia a configurar: (Alumnos, Profesores, CDs, Libros, Obras, Revistas, Tesis)").toLowerCase();
        switch (MaterialType) {
            case "cds":
                configurarCD();
                break;

            case "libros":
                configurarLibro();
                break;

            case "obras":
                configurarObra();
                break;

            case "revistas":
                configurarRevista();
                break;

            case "tesis":
                configurarTesis();
                break;
                
            case "alumnos":
                configurarAlumnos();
                break;
            
            case "profesores":
                configurarProfesores();
                break;

            default:
                JOptionPane.showMessageDialog(this, "Tipo de material no válido", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }//GEN-LAST:event_btnConfigurarActionPerformed

    private void btnMoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoraActionPerformed
        // TODO add your handling code here:
        
        if (frmMora == null) {
            frmMora = new Mora();
            frmMora.setVisible(true);
        }
        
    }//GEN-LAST:event_btnMoraActionPerformed

    private void btnDevolucionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolucionesActionPerformed
        // TODO add your handling code here:
        if (frmDev == null) {
            frmDev = new Devoluciones();
            frmDev.recibirDato(mod.getId(), mod.getId_tipo() );
            frmDev.setVisible(true);
        }
    }//GEN-LAST:event_btnDevolucionesActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        // TODO add your handling code here:
        String tipo_material = JOptionPane.showInputDialog("Digite el material a consultar:");
        
        if (frmConsulta == null) {
            frmConsulta = new Consultar();
            
            frmConsulta.setTipoMaterial(tipo_material);
            frmConsulta.setVisible(true);
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    
    
    private void configurarAlumnos(){
        String idtipo = "3";
        String limit = JOptionPane.showInputDialog("Digite el limite de materiales:");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configAlumnos(idtipo, limit);
    }
    private void configurarProfesores(){
        String idtipo = "2";
        String limit = JOptionPane.showInputDialog("Digite el limite de materiales:");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configAlumnos(idtipo, limit);
    }
    private void configurarCD(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String unidadesdisponibles = JOptionPane.showInputDialog("Digite las Unidades Disponibles");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configurarCD(unidadesdisponibles, codigoidentificacion);
    }   
    private void configurarLibro(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String unidadesdisponibles = JOptionPane.showInputDialog("Digite las Unidades Disponibles");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configurarLibro(unidadesdisponibles, codigoidentificacion);
    }
    private void configurarObra(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String unidadesdisponibles = JOptionPane.showInputDialog("Digite las Unidades Disponibles");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configurarObra(unidadesdisponibles, codigoidentificacion);
    }
    private void configurarRevista(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String unidadesdisponibles = JOptionPane.showInputDialog("Digite las Unidades Disponibles");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configurarRevista(unidadesdisponibles, codigoidentificacion);
    }
    private void configurarTesis(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String unidadesdisponibles = JOptionPane.showInputDialog("Digite las Unidades Disponibles");
        SqlMateriales modSql = new SqlMateriales();
        modSql.configurarTesis(unidadesdisponibles, codigoidentificacion);
    }
    
    
    private void prestarCD(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String fechaInicio = JOptionPane.showInputDialog("Digite la fecha de Inicio de Prestamo: (yyyy-mm-dd)");

        SqlPrestamos modSql = new SqlPrestamos();
        modSql.prestarCD(codigoidentificacion,mod.getId());
        
        SqlPrestamos modsql = new SqlPrestamos();
        modsql.registrarPrestamo(codigoidentificacion, mod.getNombre(),fechaInicio);      
    }
    private void prestarLibro(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String fechaInicio = JOptionPane.showInputDialog("Digite la fecha de Inicio de Prestamo: (yyyy-mm-dd)");

        SqlPrestamos modSql = new SqlPrestamos();
        modSql.prestarLibro(codigoidentificacion,mod.getId());
        
        SqlPrestamos modsql = new SqlPrestamos();
        modsql.registrarPrestamo(codigoidentificacion, mod.getNombre(),fechaInicio);
    }
    private void prestarObra(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String fechaInicio = JOptionPane.showInputDialog("Digite la fecha de Inicio de Prestamo: (yyyy-mm-dd)");

        SqlPrestamos modSql = new SqlPrestamos();
        modSql.prestarObra(codigoidentificacion,mod.getId());
        
        SqlPrestamos modsql = new SqlPrestamos();
        modsql.registrarPrestamo(codigoidentificacion, mod.getNombre(),fechaInicio);
    }
    private void prestarRevista(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String fechaInicio = JOptionPane.showInputDialog("Digite la fecha de Inicio de Prestamo: (yyyy-mm-dd)");

        SqlPrestamos modSql = new SqlPrestamos();
        modSql.prestarRevista(codigoidentificacion,mod.getId()); 
        
        SqlPrestamos modsql = new SqlPrestamos();
        modsql.registrarPrestamo(codigoidentificacion, mod.getNombre(),fechaInicio);
    }
    private void prestarTesis(){
        String codigoidentificacion = JOptionPane.showInputDialog("Digite el Codigo de Identificacion: ");
        String fechaInicio = JOptionPane.showInputDialog("Digite la fecha de Inicio de Prestamo: (yyyy-mm-dd)");

        SqlPrestamos modSql = new SqlPrestamos();
        modSql.prestarTesis(codigoidentificacion,mod.getId());
        
        SqlPrestamos modsql = new SqlPrestamos();
        modsql.registrarPrestamo(codigoidentificacion, mod.getNombre(),fechaInicio);
    }
    
    
    private void agregarCD() {
        String titulo = JOptionPane.showInputDialog("Titulo: ");
        String artista = JOptionPane.showInputDialog("Artista: ");
        String genero = JOptionPane.showInputDialog("Genero: ");
        String duracion = JOptionPane.showInputDialog("Duracion: ");
        int numeroCanciones = Integer.parseInt(JOptionPane.showInputDialog("Numero de Canciones: "));
        String ubicacion = JOptionPane.showInputDialog("Ubicacion: ");
        int unidades = Integer.parseInt(JOptionPane.showInputDialog("Unidades: "));

        SqlMateriales modSql = new SqlMateriales();
        modSql.agregarCD(titulo, artista, genero, duracion, numeroCanciones, ubicacion, unidades);
        
       
    }
    private void agregarLibros() {
        String titulo = JOptionPane.showInputDialog("Titulo: ");
        String autor = JOptionPane.showInputDialog("Autor: ");
        int paginas = Integer.parseInt(JOptionPane.showInputDialog("Paginas: "));
        String editorial = JOptionPane.showInputDialog("Editorial: ");
        String isbn = JOptionPane.showInputDialog("ISBN: ");
        String fechapublicacion = JOptionPane.showInputDialog("Fecha Publicacion: ");
        String ubicacion = JOptionPane.showInputDialog("Ubicacion: ");
        int unidades = Integer.parseInt(JOptionPane.showInputDialog("Unidades: "));
        
        SqlMateriales modSql = new SqlMateriales();
        modSql.agregarLibro(titulo, autor, paginas, editorial, isbn, fechapublicacion, ubicacion, unidades);
        
    }
    private void agregarObras() {
        String titulo = JOptionPane.showInputDialog("Titulo: ");
        String autor = JOptionPane.showInputDialog("Autor: ");
        int paginas = Integer.parseInt(JOptionPane.showInputDialog("Paginas: "));
        String genero = JOptionPane.showInputDialog("Genero: ");
        String fechapublicacion = JOptionPane.showInputDialog("Fecha Publicacion: ");
        String ubicacion = JOptionPane.showInputDialog("Ubicacion: ");
        int unidades = Integer.parseInt(JOptionPane.showInputDialog("Unidades: "));
        
        SqlMateriales modSql = new SqlMateriales();
        modSql.agregarObra(titulo, autor, paginas, genero, fechapublicacion, ubicacion, unidades);
        
    }
    private void agregarRevistas() {
        String titulo = JOptionPane.showInputDialog("Titulo: ");
        String editorial = JOptionPane.showInputDialog("Editorial: ");
        String periodicidad = JOptionPane.showInputDialog("Periodicidad: ");
        String fechapublicacion = JOptionPane.showInputDialog("Fecha Publicacion: ");
        String ubicacion = JOptionPane.showInputDialog("Ubicacion: ");
        int unidades = Integer.parseInt(JOptionPane.showInputDialog("Unidades: "));
        
        SqlMateriales modSql = new SqlMateriales();
        modSql.agregarRevista(titulo, editorial, periodicidad, fechapublicacion, ubicacion, unidades);
    }
    private void agregarTesis() {
        String titulo = JOptionPane.showInputDialog("Titulo: ");
        String autor = JOptionPane.showInputDialog("Autor: ");
        String facultad = JOptionPane.showInputDialog("Facultad: ");
        String fechapublicacion = JOptionPane.showInputDialog("Fecha Publicacion: ");
        String ubicacion = JOptionPane.showInputDialog("Ubicacion: ");
        int unidades = Integer.parseInt(JOptionPane.showInputDialog("Unidades: "));
        
        SqlMateriales modSql = new SqlMateriales();
        modSql.agregarTesis(titulo, autor, facultad, fechapublicacion, ubicacion, unidades);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfigurar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnDevoluciones;
    private javax.swing.JButton btnIngEjem;
    private javax.swing.JButton btnMora;
    private javax.swing.JButton btnReContraseña;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnprestamos;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
